

Set.prototype.equals = function(that) {
    // Сокращенная проверка для тривиального случая 
    if (this === that) return true;

    // Если объект that не является множеством, 
    // он не может быть равен объекту this.
    // Для поддержки подклассов класса Set используется оператор instanceof.
    // Мы могли бы реализовать более либеральную проверку, если бы для нас
    // было желательно использовать прием грубого определения типа.
    // Точно так же можно было бы ужесточить проверку, выполняя сравнение
    //   this.constructor == that.constructor.
    // Обратите внимание, что оператор instanceof корректно отвергает попытки 
    // сравнения со значениями null и undefined 
    if (!(that instanceof Set)) return false;

    // Если два множества имеют разные размеры, они не равны 
    if (this.size() != that.size()) return false;

    // Теперь требуется убедиться, что каждый элемент в this 
    // также присутствует в that. 
    // Использовать исключение для прерывания цикла foreach, 
    // если множества не равны.
    try {
        this.foreach(function(v) { if (!that.contains(v)) throw false; });
        return true;     // Все элементы совпали: множества равны. 
    } catch (x) {
        if (x === false) return false; // Элемент в this отсутствует в that. 
        throw x; // Для других исключений: возбудить повторно.
    }
};
